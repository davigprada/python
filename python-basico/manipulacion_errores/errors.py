
'''
Errores en Python

Hay dos tipos diferentes de errores: errores de sintaxis y excepciones.

ğŸ‘‡ 
Los errores de sintaxis, tambiÃ©n conocidos como errores de interpretaciÃ³n,
son quizÃ¡s el tipo de queja mÃ¡s comÃºn que tenÃ©s cuando todavÃ­a estÃ¡s aprendiendo Python.

#saludar print('Hola mundo') -> SyntaxError: invalid syntax


ğŸ‘‡
Las excepciones en python son una forma de controlar el
comportamiento de un programa cuando se produce un error.

Esto es muy importante ya que salvo que tratemos este error, el programa se pararÃ¡,
y esto es algo que en determinadas aplicaciones no es una opciÃ³n vÃ¡lida.

Existen muchos tipos de Excepciones integradas en Python, puedes consurtarlas aquÃ­:
https://www.w3schools.com/python/python_ref_exceptions.asp


ğŸ‘‡
AsÃ­ como tambiÃ©n existen excepciones integradas en Python,
podemos de igual forma crear nuestras propias excepciones
haciendo uso de ğŸ‘‰ raise Exception(" ")

'''

#Lanzar una excepciÃ³n propia con raise
age = int(input('Â¿CuÃ¡l es tu edad? '))
if age < 18:
    raise Exception('No se permiten menores de edad')
else:
    print('Â¡Puedes ingresar!')


#Otra forma de crear excepciones
a = 5
b = 0
#raise ZeroDivisionError('No se puede dividir entre 0 pelotudo!')
c = a/b




'''

La buena noticia es que las excepciones pueden ser capturadas
y manejadas adecuadamente, sin que el programa se detenga.ğŸ”¥

'''






""" while True:
    try:
        x = int(input("Please enter a number: "))
        print('Well done! The number is:',x)
        break
    except ValueError:
        print("Oops!  That was no valid number.  Try again...") """

